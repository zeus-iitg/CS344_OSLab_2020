commit bd3cd50b7b8e6d6aab9914c065348fc623020c69
Author: zeus-iitg <vaibhavsingh878@gmail.com>
Date:   Thu Nov 12 18:54:45 2020 +0530

    part A final

diff --git a/sysproc.c b/sysproc.c
index 0686d29..34b4c38 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -51,8 +51,10 @@ sys_sbrk(void)
   if(argint(0, &n) < 0)
     return -1;
   addr = myproc()->sz;
-  if(growproc(n) < 0)
-    return -1;
+  myproc()->sz += n;
+  
+  //  if(growproc(n) < 0)
+  //    return -1;
   return addr;
 }
 
diff --git a/trap.c b/trap.c
index 41c66eb..6de6ea4 100644
--- a/trap.c
+++ b/trap.c
@@ -14,6 +14,21 @@ extern uint vectors[];  // in vectors.S: array of 256 entry pointers
 struct spinlock tickslock;
 uint ticks;
 
+int mappages(pde_t *pgdir, void *va, uint size, uint pa, int perm);
+
+int handlePageFault(){
+  int addr=rcr2();
+  int rounded_addr = PGROUNDDOWN(addr);
+  char *mem=kalloc();
+  if(mem!=0){
+    memset(mem, 0, PGSIZE);
+    if(mappages(myproc()->pgdir, (char*)rounded_addr, PGSIZE, V2P(mem), PTE_W|PTE_U)<0)
+      return -1;
+    return 0;
+  } else 
+    return -1;
+}
+
 void
 tvinit(void)
 {
@@ -77,7 +92,12 @@ trap(struct trapframe *tf)
             cpuid(), tf->cs, tf->eip);
     lapiceoi();
     break;
-
+  case T_PGFLT:
+    if(handlePageFault()<0){
+      cprintf("Could not allocate page. Sorry.\n");
+      panic("trap");
+    }
+  break;
   //PAGEBREAK: 13
   default:
     if(myproc() == 0 || (tf->cs&3) == 0){
diff --git a/vm.c b/vm.c
index 7134cff..0275cec 100644
--- a/vm.c
+++ b/vm.c
@@ -57,7 +57,7 @@ walkpgdir(pde_t *pgdir, const void *va, int alloc)
 // Create PTEs for virtual addresses starting at va that refer to
 // physical addresses starting at pa. va and size might not
 // be page-aligned.
-static int
+int
 mappages(pde_t *pgdir, void *va, uint size, uint pa, int perm)
 {
   char *a, *last;
